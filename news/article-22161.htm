<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://windowsnekoray.github.io/news/article-22161.htm" />
    <meta charset="utf-8">
    <!-- Always force latest IE rendering engine -->
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <!-- Mobile Specific Meta -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Spring boot+LogBack+MDC实现链路追踪</title>
        <meta name="description" content="MDC(Mapped Diagnostic Context，映射调试上下文)是 log4j 、logback及log4j2 提供的一种方便在多线程条件下记录日志的功能。MDC&nbsp;可以看成是一个" />
        <link rel="icon" href="/assets/website/img/windowsnekoray/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="WindowsNekoRay节点分享站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://windowsnekoray.github.io/news/article-22161.htm" />
    <meta property="og:site_name" content="WindowsNekoRay节点分享站" />
    <meta property="og:title" content="Spring boot+LogBack+MDC实现链路追踪" />
    <meta property="og:image" content="https://windowsnekoray.github.io/uploads/20240707/7687b696c066e336577b0eb73a6fea0d.webp" />
        <meta property="og:release_date" content="2024-12-06T09:14:31" />
    <meta property="og:updated_time" content="2024-12-06T09:14:31" />
        <meta property="og:description" content="MDC(Mapped Diagnostic Context，映射调试上下文)是 log4j 、logback及log4j2 提供的一种方便在多线程条件下记录日志的功能。MDC&nbsp;可以看成是一个" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Spring boot+LogBack+MDC实现链路追踪">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- BOOTSTRAP CSS -->
    <link rel="stylesheet" href="/assets/website/css/windowsnekoray/bootstrap.min.css">
    <!-- FONT-AWESOME -->
    <link rel="stylesheet" href="/assets/website/css/windowsnekoray/font-awesome-4.7.0/css/font-awesome.min.css">
    <!-- OWL CAROUSEL -->
    <link href="/assets/website/css/windowsnekoray/owl.carousel.min.css" rel="stylesheet">
    <link href="/assets/website/css/windowsnekoray/owl.theme.default.min.css" rel="stylesheet">
    <!-- LIGHTBOX -->
    <link rel=" stylesheet" href="/assets/website/css/windowsnekoray/lightbox.css">
    <!--Style CSS file-->
    <link rel=" stylesheet" href="/assets/website/css/windowsnekoray/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FP5Q3FML8Q"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-FP5Q3FML8Q');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ====== Preloader ======  -->
    <div id="loader-wrapper">
        <div id="loader"></div>
        <div class="loader-section section-left"></div>
        <div class="loader-section section-right"></div>
    </div>
    <!-- ======End Preloader ======  -->
    <!-- ======START NAVGITION ======  -->
    <nav class="navbar navbar-expand-lg">
        <!-- logo -->
        <a class="navbar-brand" href="/">
                <span>Windows NekoRay</span>
                </a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarText">
            <span class="icon-bar"><i class="fa fa-bars fa-2x"></i></span>
        </button>
        <!--End of Resposive Toggle icon-->
        <div class="collapse navbar-collapse" id="navbarText">
            <!--Main menu navigation list-->
            <ul class="navbar-nav ml-auto line">
                                <li class="nav-item">
                    <a class="nav-link" href="/">首页</a>
                </li>
                                <li class="nav-item">
                    <a class="nav-link" href="/free-nodes/">免费节点</a>
                </li>
                                <li class="nav-item">
                    <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                </li>
                                <li class="nav-item">
                    <a class="nav-link" href="/client.htm">客户端</a>
                </li>
                                <li class="nav-item">
                    <a class="nav-link" href="/news/">新闻资讯</a>
                </li>
                            </ul>
            <!--End of Main menu navigation list-->
        </div>
        <!--End of resposive collapse class-->
    </nav>
    <!-- ====== END NAVGITION ======  -->
    <!-- =======START HEADER=========== -->
    <header class="home list" id="home" data-scroll-index="0">
        <div class="container">
            <div class="row">
                <div class="col-lg-6 home-content mt-md-5 mt-sm-5">
                    <h2 class="heading-tertiary mt-3 mb-3">
                        Spring boot+LogBack+MDC实现链路追踪                    </h2>
                    <p class="mb-5">
                        <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                    </p>
                </div>
            </div>
        </div>
    </header>
    <!-- ====== END HEADER ======  -->
    <!-- Scroll to Top -->
    <div id="scroll-to-top"><i class="fa fa-arrow-up fa-fw"></i></div>
    <!-- ====== START ABOUT ======  -->
    <section class="about padding" id="about" data-scroll-index="1">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> </h1> <p>MDC(Mapped Diagnostic Context，映射调试上下文)是 log4j 、logback及log4j2 提供的一种方便在多线程条件下记录日志的功能。<strong>MDC</strong>&nbsp;可以看成是一个<strong>与当前线程绑定的哈希表</strong>，可以往其中添加键值对。MDC 中包含的内容可以<strong>被同一线程中执行的代码所访问</strong>。当前线程的子线程会继承其父线程中的 MDC 的内容。当需要记录日志时，只需要从 MDC 中获取所需的信息即可。</p> </h1> <ul> <li>clear() =&gt; 移除所有MDC</li> <li>get (String key) =&gt; 获取当前线程MDC中指定key的值</li> <li>getContext() =&gt; 获取当前线程MDC的MDC</li> <li>put(String key, Object o) =&gt; 往当前线程的MDC中存入指定的键值对</li> <li>remove(String key) =&gt; 删除当前线程MDC中指定的键值对 。</li> </ul> </h1> <ol> <li>拦截器</li> </ol> <pre><code>@Component public class LogInterceptor implements HandlerInterceptor {     @Override     public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {         //如果有上层调用就用上层的ID         String traceId = request.getHeader(TraceIdUtil.TRACE_ID);         if (StringUtil.isEmpty(traceId))          {             TraceIdUtil.setTraceId(TraceIdUtil.generateTraceId());         }         else         {             TraceIdUtil.setTraceId(traceId);         }         return true;     }      @Override     public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)             throws Exception      {              }      @Override     public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)             throws Exception {         //调用结束后删除         TraceIdUtil.remove();     } }</code></pre> <ol> <li>工具类</li> </ol> <pre><code>public class TraceIdUtil {   public static final String TRACE_ID = "requestId";        public static String getTraceId()   {      String traceId =(String) MDC.get(TRACE_ID);      return traceId == null ? "" : traceId;   }      public static void setTraceId(String traceId)   {       MDC.put(TRACE_ID,traceId);   }      public static void remove()   {       MDC.remove(TRACE_ID);          }      public static void clear()   {       MDC.clear();   }      public static String generateTraceId() {      return UUID.randomUUID().toString().replace("-", "");   }</code></pre> <ol> <li>日志文件配置</li> </ol> <pre><code>&lt;property name="LOG_PATTERN" value="%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{requestId}] %logger{36} - %msg%n" /&gt;</code></pre> <p>重点是%X{requestId},requestId和MDC中的键名称保持一致。</p> </h1> <p>至此基本的功能已经实现，但是存在一下几个问题</p> <ul> <li>多线程情况下，子线程中打印日志会丢失traceId.</li> <li>HTTP跨服务之间的调用丢失traceId.</li> </ul> </h1> <p>问题重现</p> <pre><code>  @LogAnnotation(model="用户管理",func="查询用户信息",desc="根据用户名称")     @GetMapping("getUserByName")     public Result getUserByName(@RequestParam String name)     {         //主线程日志         logger.info("getUserByName paramter name:"+name);         for(int i=0;i&lt;5;i++)         {            //子线程日志             threadPoolTaskExecutor.execute(()-&gt;{                 logger.info("child thread:{}",name);                 userService.getUserByName(name);              });         }                  return Result.success();     }</code></pre> <p>运行结果</p> <pre><code>2022-03-13 12:45:44.156 [http-nio-8089-exec-1] INFO  [ec05a600ed1a4556934a3afa4883766a] c.s.fw.controller.UserController - getUserByName paramter name:1 2022-03-13 12:45:44.173 [Pool-A1] INFO  [] c.s.fw.controller.UserController - child thread:1</code></pre> <p>从运行的结果来看，子线程打印日志，日志中的traceId信息已经丢失。</p> <p>解决方案</p> <p>子线程在打印日志的过程中traceId将丢失，解决方案为重写线程池(对于直接new Thread 创建线程的情况不考略),实际开发中也需要禁止这种情况。</p> <pre><code>public class ThreadPoolExecutorMdcWrapper extends ThreadPoolTaskExecutor {     private static final long serialVersionUID = 3940722618853093830L;      @Override     public void execute(Runnable task)     {         super.execute(ThreadMdcUtil.wrap(task, MDC.getCopyOfContextMap()));     }      @Override     public &lt;T&gt; Future&lt;T&gt; submit(Callable&lt;T&gt; task)     {         return super                 .submit(ThreadMdcUtil.wrap(task, MDC.getCopyOfContextMap()));     }      @Override     public Future&lt;?&gt; submit(Runnable task)     {         return super                 .submit(ThreadMdcUtil.wrap(task, MDC.getCopyOfContextMap()));     } }</code></pre> <p>因为Spring Boot ThreadPoolTaskExecutor 已经对ThreadPoolExecutor进行封装，只需要继承ThreadPoolTaskExecutor重写相关的执行方法即可。</p> <pre><code>public class ThreadMdcUtil {     public static void setTraceIdIfAbsent() {         if (MDC.get(TraceIdUtil.TRACE_ID) == null)          {             MDC.put(TraceIdUtil.TRACE_ID, TraceIdUtil.generateTraceId());         }     }      public static &lt;T&gt; Callable&lt;T&gt; wrap(final Callable&lt;T&gt; callable, final Map&lt;String, String&gt; context) {         return () -&gt; {             if (context == null) {                 MDC.clear();             } else {                 MDC.setContextMap(context);             }             setTraceIdIfAbsent();             try {                 return callable.call();             } finally {                 MDC.clear();             }         };     }      public static Runnable wrap(final Runnable runnable, final Map&lt;String, String&gt; context) {         return () -&gt; {             if (context == null) {                 MDC.clear();             } else {                 MDC.setContextMap(context);             }             //设置traceId             setTraceIdIfAbsent();             try {                 runnable.run();             } finally {                 MDC.clear();             }         };     } }</code></pre> <p>代码说明：</p> <ul> <li>判断当前线程对应MDC的Map是否存在，如果存在则设置</li> <li>设置MDC中的traceId值，不存在则新生成，如果是子线程，MDC中traceId不为null</li> <li>执行run方法</li> </ul> <p>线程池配置</p> <pre><code>@Configuration public class ThreadPoolTaskExecutorConfig {     //最大可用的CPU核数     public static final int PROCESSORS = Runtime.getRuntime().availableProcessors();          @Bean     public ThreadPoolExecutorMdcWrapper getExecutor()     {         ThreadPoolExecutorMdcWrapper executor =new ThreadPoolExecutorMdcWrapper();         executor.setCorePoolSize(PROCESSORS *2);         executor.setMaxPoolSize(PROCESSORS * 4);         executor.setQueueCapacity(50);         executor.setKeepAliveSeconds(60);         executor.setThreadNamePrefix("Task-A");         executor.setRejectedExecutionHandler(new ThreadPoolExecutor.AbortPolicy());         executor.initialize();         return executor;     } }</code></pre> <p>重新运行结果发现子线程能够正常获取traceid信息进行跟踪。</p> <pre><code>2022-03-13 13:19:30.688 [Task-A1] INFO  [482929425cbc4476a4e7168615af7890] c.s.fw.controller.UserController - child thread:1 2022-03-13 13:19:31.003 [Task-A1] INFO  [482929425cbc4476a4e7168615af7890] c.s.fw.service.impl.UserServiceImpl - name:1</code></pre> </h1> <p>HTTP调用第三方服务接口时traceId丢失，需要在发送请求时在Request Header中添加traceId，在被调用方添加拦截器获取header中的traceId添加到MDC中。</p> <p>HTTP调用有多种方式，比较常见的有HttpClient、OKHttp、RestTemplate，以RestTemplate调用为例。</p> <ol> <li>接口调用方</li> </ol> <pre><code>public class RestTemplateTraceIdInterceptor implements         ClientHttpRequestInterceptor {     @Override     public ClientHttpResponse intercept(HttpRequest request, byte[] body,             ClientHttpRequestExecution clientHttpRequestExecution) throws IOException     {         String traceId=MDC.get("requestId");         if(traceId!=null)         {             request.getHeaders().set("requestId", traceId);         }         else         {             request.getHeaders().set("requestId", UUID.randomUUID().toString().replace("-", ""));         }         return clientHttpRequestExecution.execute(request, body);     }  }</code></pre> <p>RestTemplate添加拦截器即可。</p> <pre><code>restTemplate.setInterceptors(Arrays.asList(new RestTemplateTraceIdInterceptor()));</code></pre> <p>2.第三方服务需要添加拦截器。</p> <pre><code>@Component public class LogInterceptor implements HandlerInterceptor {     @Override     public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {         //如果有上层调用就用上层的ID         String traceId = request.getHeader(TraceIdUtil.TRACE_ID);         if (StringUtil.isEmpty(traceId))          {             TraceIdUtil.setTraceId(TraceIdUtil.generateTraceId());         }         else         {             TraceIdUtil.setTraceId(traceId);         }         return true;     }      @Override     public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)             throws Exception      {              }      @Override     public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)             throws Exception {         //调用结束后删除         TraceIdUtil.remove();     } }</code></pre> <p>其他HttpClient、OKHttp的实现方式与RestTemplate基本相同，这里就不一一列举。 Spring boot +logback+MDC实现全链路跟踪内容已经讲完了。在实际开发中，我也发现了大家对于日志的使用存在一些问题，下一章将讲解开发中日志使用规约。</p> <p class="img-center"></p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-22159.htm">在Vue项目里使用element ui在input框上使用v-model.trim导致输入空格失效</a></p>
                                        <p>下一个：<a href="/news/article-22618.htm">想开一家宠物医院需要什么（开个宠物医院大概需要多少钱）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-38701.htm" title="动物医院注册商标名称（动物医院招牌图片）">动物医院注册商标名称（动物医院招牌图片）</a></li>
                        <li class="py-2"><a href="/news/article-43645.htm" title="丹阳宠物免费领养中心在哪里（丹阳市宠物市场在哪里）">丹阳宠物免费领养中心在哪里（丹阳市宠物市场在哪里）</a></li>
                        <li class="py-2"><a href="/news/article-33860.htm" title="动物接种疫苗多少钱一次打的（动物接种疫苗多少钱一次打的好）">动物接种疫苗多少钱一次打的（动物接种疫苗多少钱一次打的好）</a></li>
                        <li class="py-2"><a href="/news/article-65412.htm" title="宠物店一个月能卖多少狗粮和狗粮 宠物店一个月能卖多少狗粮和狗粮呢">宠物店一个月能卖多少狗粮和狗粮 宠物店一个月能卖多少狗粮和狗粮呢</a></li>
                        <li class="py-2"><a href="/news/article-25391.htm" title="设计模式详解之结构型设计模式——适配器、装饰器">设计模式详解之结构型设计模式——适配器、装饰器</a></li>
                        <li class="py-2"><a href="/news/article-54386.htm" title="动物医院英语翻译怎么写的（动物医院 翻译）">动物医院英语翻译怎么写的（动物医院 翻译）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-27-free-high-speed-nodes.htm" title="「12月27日」最高速度22.9M/S，2024年NekoRay每天更新免费节点订阅链接">「12月27日」最高速度22.9M/S，2024年NekoRay每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-2-share-windows-nekoray.htm" title="「1月2日」最高速度19.5M/S，2025年NekoRay每天更新免费节点订阅链接">「1月2日」最高速度19.5M/S，2025年NekoRay每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-4-free-high-speed-nodes.htm" title="「2月4日」最高速度21.2M/S，2025年NekoRay每天更新免费节点订阅链接">「2月4日」最高速度21.2M/S，2025年NekoRay每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-1-free-node-subscribe-links.htm" title="「3月1日」最高速度20M/S，2025年NekoRay每天更新免费节点订阅链接">「3月1日」最高速度20M/S，2025年NekoRay每天更新免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">87</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- ====== END ABOUT======  -->
        <!-- ====== START FOOTER ======  -->
    <section class="footer">
        <div class="container">
            <div class="row">
                <!-- START FOOTER BOTTOM -->
                <div class="offset-md-3 col-md-6 offset-md-3">
                    <!-- START RIGHTS -->
                    <div class="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        <p>WindowsNekoRay节点分享站 版权所有</p>
                        <p>Powered by WordPress</p>
                    </div>
                    <!-- END RIGHTS -->
                </div>
                <!-- END FOOTER BOTTOM -->
            </div>
        </div>
    </section>
    <!-- ====== END FOOTER ======  -->
    <!-- ====== JS ======  -->
    <!--jquery-3.3.1 js-->
    <script src="/assets/website/js/frontend/windowsnekoray/jquery-3.3.1.min.js"></script>
    <!-- popper js -->
    <script src="/assets/website/js/frontend/windowsnekoray/popper.min.js"></script>
    <!-- bootstrap js -->
    <script src="/assets/website/js/frontend/windowsnekoray/bootstrap.min.js"></script>
    <!-- scrollIt js -->
    <script src="/assets/website/js/frontend/windowsnekoray/scrollIt.min.js"></script>
    <!-- countTo js -->
    <script src="/assets/website/js/frontend/windowsnekoray/jquery.countTo.js"></script>
    <!-- filter js -->
    <script src="/assets/website/js/frontend/windowsnekoray/jquery.filterizr.min.js"></script>
    <!-- waypoints js -->
    <script src="/assets/website/js/frontend/windowsnekoray/waypoints.min.js"></script>
    <!-- owl carousel js -->
    <script src="/assets/website/js/frontend/windowsnekoray/owl.carousel.min.js"></script>
    <!-- validator js -->
    <script src="/assets/website/js/frontend/windowsnekoray/validator.js"></script>
    <!-- coustom js -->
    <script src="/assets/website/js/frontend/windowsnekoray/main.js"></script>
    <!-- lightbox js -->
    <script src="/assets/website/js/frontend/windowsnekoray/lightbox.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>